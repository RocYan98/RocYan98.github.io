import{_ as n,r as l,o as i,c as r,b as a,e as t,d as s}from"./app-ab1fe57a.js";const o={},m=a("h2",{id:"splattingavatar-realistic-real-time-human-avatars-with-mesh-embedded-gaussian-splatting",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#splattingavatar-realistic-real-time-human-avatars-with-mesh-embedded-gaussian-splatting","aria-hidden":"true"},"#"),t(" SplattingAvatar: Realistic Real-Time Human Avatars with Mesh-Embedded Gaussian Splatting")],-1),c={href:"https://initialneil.github.io/SplattingAvatar",target:"_blank",rel:"noopener noreferrer"},h=a("p",null,"CVPR 2024",-1),p=a("h2",{id:"abstract",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#abstract","aria-hidden":"true"},"#"),t(" Abstract")],-1),d={href:"https://arxiv.org/pdf/2007.04940",title:"The Phong Surface: Efficient 3D Model Fitting Using Lifted Optimization",target:"_blank",rel:"noopener noreferrer"},g={href:"https://arxiv.org/pdf/2007.04940",title:"The Phong Surface: Efficient 3D Model Fitting Using Lifted Optimization",target:"_blank",rel:"noopener noreferrer"},u=a("figure",null,[a("img",{src:"http://img.rocyan.cn/blog/2024/05/6638529ae6e2f.png",alt:"Fig. 1: Overview",tabindex:"0",loading:"lazy"}),a("figcaption",null,"Fig. 1: Overview")],-1),_=a("h2",{id:"introduction",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),t(" Introduction")],-1),f={href:"https://arxiv.org/pdf/2007.04940",title:"The Phong Surface: Efficient 3D Model Fitting Using Lifted Optimization",target:"_blank",rel:"noopener noreferrer"},x=a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"k"),a("mo",{separator:"true"},","),a("mi",null,"u"),a("mo",{separator:"true"},","),a("mi",null,"v"),a("mo",{separator:"true"},","),a("mi",null,"d"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"(k,u,v,d)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mclose"},")")])])],-1),v=a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"u"),a("mo",{separator:"true"},","),a("mi",null,"v"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"(u,v)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mclose"},")")])])],-1),b=a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"k")]),a("annotation",{encoding:"application/x-tex"},"k")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])],-1),w=a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"d")]),a("annotation",{encoding:"application/x-tex"},"d")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"d")])])],-1),k=a("p",null,"本文的主要贡献：",-1),y=a("ul",null,[a("li",null,"本文介绍了一种将 3DGS 与 mesh 整合在一起的框架，它提供了一种新的数字人表现形式，既逼真又能提高计算效率。"),a("li",null,"本文使用 lifted optimization 来优化数字人模型，允许对高斯参数和 mesh embeddings 进行联合优化，以实现精确的重建。"),a("li",null,"本文通过综合评估和 Unity，展示了实时渲染的能力和创建各种数字人的泛化性。")],-1),M=a("h2",{id:"method",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#method","aria-hidden":"true"},"#"),t(" Method")],-1),S=a("h3",{id:"overview",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),t(" Overview")],-1),L=a("p",null,"在单目图像序列中，每张图像都有一个 registered 的 mesh 模板，即 SMPLX 或 FLAME，本文将数字人混合表示为嵌入在 mesh 上的 3D 高斯。高斯的参数包括位置、旋转、比例、颜色和不透明度，它们是半透明的 3D 粒子，通过基于 splatting 的光栅化技术呈现在摄像机视图中。",-1),A=a("p",null,[t("每个 3D 高斯以其局部 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"u"),a("mo",{separator:"true"},","),a("mi",null,"v"),a("mo",{separator:"true"},","),a("mi",null,"d"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"(u,v,d)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mclose"},")")])])]),t("​ 坐标嵌入到标准 mesh 的一个三角形上。embedding 直接定义了高斯在标准空间和 pose 空间中的位置。除位置外，每个高斯都有自己的旋转、缩放、颜色和不透明度参数。当 mesh 通过动画变形时，embedding 也会为每个高斯提供额外的旋转和缩放参数。与姿势相关的额外旋转由每个顶点四元数的重心插值定义，而额外缩放则由嵌入三角形的面积变化定义。")],-1),P=a("p",null,[t("在优化过程中，高斯参数和 embedding 参数同时更新。当 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"u"),a("mo",{separator:"true"},","),a("mi",null,"v"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"(u,v)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),a("span",{class:"mclose"},")")])])]),t(" 的更新使 embedding 跨越三角形边界时，重心会在邻近的三角形中重新计算，就像高斯在网格上行走一样。为了支持 embedding，本文调整了原版 3D 高斯的 clone 和 split 策略。")],-1),D=a("h2",{id:"reference",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),t(" Reference:")],-1),E={href:"https://arxiv.org/abs/2403.05087",target:"_blank",rel:"noopener noreferrer"},F={href:"https://arxiv.org/pdf/2007.04940",target:"_blank",rel:"noopener noreferrer"};function O(z,T){const e=l("ExternalLinkIcon");return i(),r("div",null,[m,a("p",null,[a("a",c,[t("项目地址"),s(e)])]),h,p,a("p",null,[t("我们展示了 SplattingAvatar，这是一种在三角形网格上嵌入 3DGS 的逼真数字人的混合 3D 表现形式，在现代 GPU 上的渲染速度超过 300 FPS，在移动设备上的渲染速度为 30 FPS。我们通过显式网格和隐式高斯进行拼接建模，将数字人的运动和外观分离开来。高斯由三角形网格上的重心坐标和位移定义为 Phong Surface"),a("a",d,[t("[2]"),s(e)]),t("。我们通过改进 Lifted Optimiaztion"),a("a",g,[t("[2]"),s(e)]),t(" 方法，在遍历三角形网格的同时优化高斯参数。SplattingAvatar 是数字人的混合表现形式，其中网格代表低频运动和表面变形，而高斯则代表高频几何和细节外观。现有的变形方法依赖于基于 MLP 的线性混合蒙皮 (LBS) 来表示运动，与之不同的是，我们直接通过网格来控制高斯的旋转和平移，这就增强了它与各种动画技术 (如骨骼动画、混合形状和网格编辑) 的兼容性。SplattingAvatar 可通过单目视频对全身和头部进行训练，在多个数据集上显示出一流的渲染质量。")]),u,_,a("p",null,[t("本文提出用可训练的 mesh 的 embedding 来显示控制高斯，将 mesh 表示为 Phong surface"),a("a",f,[t("[2]"),s(e)]),t("，embedding 表示为 "),x,t("，其中 "),v,t(" 表示第 "),b,t(" 个 mesh 的重心坐标在 embedding 上的位置，"),w,t(" 表示沿着法向量方向的位移。")]),k,y,M,S,L,A,P,D,a("p",null,[a("a",E,[t("[1]SplattingAvatar: Realistic Real-Time Human Avatars with Mesh-Embedded Gaussian Splatting"),s(e)])]),a("p",null,[a("a",F,[t("[2]The Phong Surface: Efficient 3D Model Fitting Using Lifted Optimization"),s(e)])])])}const U=n(o,[["render",O],["__file","SlattingAvatar.html.vue"]]);export{U as default};
