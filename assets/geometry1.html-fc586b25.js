import{_ as a,o as i,c as e,f as n}from"./app-17184055.js";const t={},r=n('<h1 id="几何-基本表示方法" tabindex="-1"><a class="header-anchor" href="#几何-基本表示方法" aria-hidden="true">#</a> 几何（基本表示方法）</h1><p>几何分为隐式几何（Implicit Geometry）和显式几何（Explicit Geometry)）</p><h2 id="_1-隐式几何" tabindex="-1"><a class="header-anchor" href="#_1-隐式几何" aria-hidden="true">#</a> 1 隐式几何</h2><p>隐式几何不告诉你每个点的具体坐标，而是描述每个点所满足的关系（即几何的函数表达式）</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134afcb9b6b.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>优点：很容易判断一个点与曲面的关系（在面上、内部或外部）</li><li>缺点：很难通过函数看出是什么图形</li></ul><h2 id="_2-隐式几何的表示" tabindex="-1"><a class="header-anchor" href="#_2-隐式几何的表示" aria-hidden="true">#</a> 2 隐式几何的表示</h2><h3 id="_2-1-代数曲面-algebraic-surfaces" tabindex="-1"><a class="header-anchor" href="#_2-1-代数曲面-algebraic-surfaces" aria-hidden="true">#</a> 2.1 代数曲面（Algebraic Surfaces）</h3><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b011045d.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-构造立体几何-constructive-solid-geometry-csg" tabindex="-1"><a class="header-anchor" href="#_2-2-构造立体几何-constructive-solid-geometry-csg" aria-hidden="true">#</a> 2.2 构造立体几何（Constructive Solid Geometry，CSG）</h3><p>CSG 指的是可以对各种不同的几何做布尔运算，如并，交，差：<img src="http://img.rocyan.cn/blog/2024/04/66134b037af92.png" alt="" loading="lazy"></p><h3 id="_2-3-符号距离函数-signed-distance-function" tabindex="-1"><a class="header-anchor" href="#_2-3-符号距离函数-signed-distance-function" aria-hidden="true">#</a> 2.3 符号距离函数 （Signed Distance Function）</h3><p>可以通过距离函数来得到几何形体混合的效果，可以使用不同的距离函数实现不同混合效果<img src="http://img.rocyan.cn/blog/2024/04/66134b09c2c70.png" alt="image-20230720145517725" loading="lazy"><img src="http://img.rocyan.cn/blog/2024/04/66134b1186de8.png" alt="" loading="lazy"></p><h3 id="_2-4-水平集-level-set" tabindex="-1"><a class="header-anchor" href="#_2-4-水平集-level-set" aria-hidden="true">#</a> 2.4 水平集（Level Set）</h3><p>水平集的方与 SDF 类似，也是找出函数值为 0 的地方作曲线，但不像 SDF 会空间中的每一个点有一种严格的数学定义，而是对空间用一个个格子去近似一个函数</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/0dgwch.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-5-分型几何-fractals" tabindex="-1"><a class="header-anchor" href="#_2-5-分型几何-fractals" aria-hidden="true">#</a> 2.5 分型几何（Fractals）</h3><p>分型几何是指许多自相似的形体最终所组成的几何形状</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b1962db1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-显式几何" tabindex="-1"><a class="header-anchor" href="#_3-显式几何" aria-hidden="true">#</a> 3 显式几何</h2><p>所有曲面的点被直接给出，或者可以通过映射关系直接得到</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b1c42ef3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>显式几何的优缺点和隐式几何刚好相反</p><h2 id="_4-显式几何的表示" tabindex="-1"><a class="header-anchor" href="#_4-显式几何的表示" aria-hidden="true">#</a> 4 显式几何的表示</h2><h3 id="_4-1-点云-point-cloud" tabindex="-1"><a class="header-anchor" href="#_4-1-点云-point-cloud" aria-hidden="true">#</a> 4.1 点云（Point Cloud）</h3><p>很多的点构成的曲面，直接有着所有点的信息</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b22009e0.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-2-多边形网格-polygon-mesh" tabindex="-1"><a class="header-anchor" href="#_4-2-多边形网格-polygon-mesh" aria-hidden="true">#</a> 4.2 多边形网格（Polygon Mesh）</h3><p>通过定义各个多边形面的顶点以及顶点之间的连接关系就可以得到许多的三角形面或是四边形面，再通过这些面来近似表现出我们想要的模型效果</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b25a8423.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通常用 Wavefront Object（.obj）文件来定义，立方体的 obj 文件如下图：</p><figure><img src="http://img.rocyan.cn/blog/2024/04/66134b28e7c91.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>3 - 10 行定义了立方体的 8 个顶点信息。 12 - 25 行定义了这些顶点的纹理坐标信息（每个面 4 个点，共 6 个面所以最多有24种不同的纹理坐标信息，这里有一些纹理对于不同面上的点是公用的）。 27 - 34 行定义了 6 个面的法线信息，为什么有 8 个是因为建模软件输出的精度问题不必在意，其中有两个是重复的。36 - 47 行中，f 代表一个面，其中 x/x/x 的第一位表示是哪个顶点，第二位表示该顶点纹理坐标是第几个，第三位表示法线信息是第几个。 3 个 x/x/x 表示 3 个顶点的信息构成一个面。</p>',33),c=[r];function o(g,d){return i(),e("div",null,c)}const l=a(t,[["render",o],["__file","geometry1.html.vue"]]);export{l as default};
