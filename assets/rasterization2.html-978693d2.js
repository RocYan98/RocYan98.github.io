import{_ as o,o as i,c as e,b as a,e as n,f as t}from"./app-95514db7.js";const s={},l=t('<h1 id="光栅化-抗锯齿与深度测试" tabindex="-1"><a class="header-anchor" href="#光栅化-抗锯齿与深度测试" aria-hidden="true">#</a> 光栅化（抗锯齿与深度测试）</h1><h2 id="_1-采样产生的问题" tabindex="-1"><a class="header-anchor" href="#_1-采样产生的问题" aria-hidden="true">#</a> 1 采样产生的问题</h2><p>Sampling Artifacts in CG：（这里的Artifacts是指一切看上去不太对的东西，可以翻译为瑕疵）</p><ul><li>锯齿（阶梯形状）</li><li>摩尔纹</li><li>车轮效应</li><li>...</li></ul><p>产生Artifacts的原因：信号变化的太快了（频率太高），但是采样速率太慢</p><h2 id="_2-走样" tabindex="-1"><a class="header-anchor" href="#_2-走样" aria-hidden="true">#</a> 2 走样</h2><p>对两个不同的函数进行采样，采样的结果完全相同，这就被称为走样（Aliases）</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/sszjhd.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-滤波" tabindex="-1"><a class="header-anchor" href="#_3-滤波" aria-hidden="true">#</a> 3 滤波</h2><p>滤波（Filtering）就是去掉一些特定的频率</p><p>傅里叶变换可以把一个函数从时域（自变量是时间，因变量是信号的变化）变为频域（自变量是频率，因变量是该频率信号的幅度）</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/7dlxsd.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下图中，左图经过傅里叶变换可以变为右图（图像本身不带有时间信息，但空间上的位置也称为时域)，右图是频谱图。在频谱图中，中间部分是低频信息，越往外越高频，亮度表示该频率信号的多少，越亮越多。</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/e67ebi.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>频谱图的水平和垂直方向会有两根很亮的线，因为在分析一个信号时，会认为它是一个周期性重复的信号，但是图像并没有这种特征，因此会认为图片到达边界后又会重复，即在水平方向和竖直方向上有无数张同样的图片，在图片的边界上会产生剧烈的变化，因此会产生极其高的高频，<strong>分析图片时可以忽略这两条线</strong>。</p><h3 id="_3-1-高通滤波" tabindex="-1"><a class="header-anchor" href="#_3-1-高通滤波" aria-hidden="true">#</a> 3.1 高通滤波</h3><p>高通滤波（锐化）是指只有高频可以通过，因此在频域空间内完全抹掉低频信号，将结果还原成图像，形成左图。高频的东西在图像上表示的就是图像的边界。当某一图像的周围突然发生发生了变化，我们就认为他是边界。</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/qsoo7v.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-低通滤波" tabindex="-1"><a class="header-anchor" href="#_3-2-低通滤波" aria-hidden="true">#</a> 3.2 低通滤波</h3><p>低通滤波（模糊）是指只有低频可以通过，就是把边界给去掉</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/ja4ks2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-卷积" tabindex="-1"><a class="header-anchor" href="#_4-卷积" aria-hidden="true">#</a> 4 卷积</h2><p>时域卷积定理：两个时间信号卷积的频谱等于它们频谱的乘积</p>',23),r={class:"MathJax",jax:"SVG",style:{position:"relative"}},c={style:{"vertical-align":"-0.798ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.707ex",height:"2.755ex",role:"img",focusable:"false",viewBox:"0 -864.9 1196.6 1217.7","aria-hidden":"true"},h=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(421.5,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g></g><rect width="956.6" height="60" x="120" y="220"></rect></g></g></g>',1),d=[h],g=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mfrac",null,[a("mn",null,"1"),a("mrow",null,[a("mn",null,"2"),a("mi",null,"π")])])])],-1),Q=t('<p>对图像进行模糊有两种方法</p><ul><li><p>方法一：拿到一幅图直接用一个卷积滤波器进行卷积操作</p></li><li><p>方法二：</p><ol><li><p>先傅里叶变换这幅图，将这幅图变到频谱图</p></li><li><p>将卷积滤波器变到频域上</p></li><li><p>将两者相乘，乘完后得到的频域的结果，将其逆傅里叶变换，变到时域上</p></li></ol></li></ul><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/brtdm8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',3),p={class:"MathJax",jax:"SVG",style:{position:"relative"}},T={style:{"vertical-align":"-0.816ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.795ex",height:"2.773ex",role:"img",focusable:"false",viewBox:"0 -864.9 793.6 1225.5","aria-hidden":"true"},m=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g>',1),u=[m],f=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mfrac",null,[a("mn",null,"1"),a("mn",null,"9")])])],-1),y=t('<p>滤波器越大，滤波后的图片就越模糊，留下的频率就越低</p><p><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/wuex2a.png" alt="" loading="lazy"><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/cgyq39.png" alt="" loading="lazy"></p><h2 id="_5-走样的原因" tabindex="-1"><a class="header-anchor" href="#_5-走样的原因" aria-hidden="true">#</a> 5 走样的原因</h2><p>采样的间隔不同，会引起频谱不同间隔进行复制，混叠的部分就是走样</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/ldewo5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_6-反走样" tabindex="-1"><a class="header-anchor" href="#_6-反走样" aria-hidden="true">#</a> 6 反走样</h2><p>在采样之前先进行低通滤波/模糊（顺序不能反，不能先采样再模糊），上图中混叠的部分（下图中被裁掉的部分）就是高频</p><p><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/xddqpj.png" alt="" loading="lazy"><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/yet1vz.png" alt="" loading="lazy"></p><p>对三角形所覆盖的每个像素都进行卷积（求平均值)</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/5wyvcb.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-1-多重采样抗锯齿msaa-multisample-anti-aliasing" tabindex="-1"><a class="header-anchor" href="#_6-1-多重采样抗锯齿msaa-multisample-anti-aliasing" aria-hidden="true">#</a> 6.1 多重采样抗锯齿MSAA（Multisample Anti-Aliasing）</h3><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/kuargi.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过更多的样本来近似三角形的覆盖率，并不是提高采样频率，而是把一个像素划分为几个小点，判断这些小点是否在三角形内，再把结果平均起来，就知道三角形覆盖了这个像素的百分之多少 。</p><p><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/h7alod.png" alt="" loading="lazy"><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/erf5rh.png" alt="" loading="lazy"><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/p4ubry.png" alt="" loading="lazy"></p><p>MSAA并没有提高采样频率，而只是对图像进行模糊操作。</p><p>其他抗锯齿方案：</p><ul><li>快速近似抗锯齿FXAA（Fast Approximate Anti-Aliasing）</li><li>TAA（Temporal Anti-Aliasing）</li></ul><h2 id="_7-深度测试" tabindex="-1"><a class="header-anchor" href="#_7-深度测试" aria-hidden="true">#</a> 7 深度测试</h2><p>使用深度缓存（Z-buffering）算法来进行深度测试。对于每次渲染，Z-buffering都会同步生成两张图，一个是将所有像素的颜色存在frame buffer中，另一个是将所有像素的深度值（每个像素只存最小的深度值）存在depth buffer中，对于深度来说，假设深度永远是正的且越小越近，越大越远。</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/uir56j.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',20),_={class:"MathJax",jax:"SVG",style:{position:"relative"}},x={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.597ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2474 1000","aria-hidden":"true"},V=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext" fill="red" stroke="red"><path data-c="5C" d="M56 731Q56 740 62 745T75 750Q85 750 92 740Q96 733 270 255T444 -231Q444 -239 438 -244T424 -250Q414 -250 407 -240Q404 -236 230 242T56 731Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(500,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(778,0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(1334,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1640,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1918,0)"></path></g></g></g>',1),H=[V],z=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mtext",{mathcolor:"red"},"\\infin")])],-1),b=a("figure",null,[a("img",{src:"http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/1xib7b.png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),w=a("figure",null,[a("img",{src:"http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/au4fph.png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1);function M(L,v){return i(),e("div",null,[l,a("p",null,[n("频域卷积定理：两个时间信号乘积的频谱等于它们的频谱的卷积乘以"),a("mjx-container",r,[(i(),e("svg",c,d)),g])]),Q,a("p",null,[n("滤波器（滤波器其实就是卷积核的集合，如果只有一个通道，那么滤波器就是卷积核)要乘"),a("mjx-container",p,[(i(),e("svg",T,u)),f]),n("是为了不让图像的颜色发生变化，不然每个像素就会是原来这个像素周围九个像素的和，图像就会越滤波越明亮了。")]),y,a("p",null,[n("具体算法如下（R表示"),a("mjx-container",_,[(i(),e("svg",x,H)),z]),n(")：")]),b,w])}const Z=o(s,[["render",M],["__file","rasterization2.html.vue"]]);export{Z as default};
