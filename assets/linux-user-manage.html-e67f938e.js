import{_ as e,o as l,c as i,f as n,b as s,e as a}from"./app-7420e05e.js";const t={},o=n('<h1 id="linux-用户管理" tabindex="-1"><a class="header-anchor" href="#linux-用户管理" aria-hidden="true">#</a> Linux 用户管理</h1><h2 id="一、用户相关文件" tabindex="-1"><a class="header-anchor" href="#一、用户相关文件" aria-hidden="true">#</a> 一、用户相关文件</h2><h3 id="_1-1-用户信息文件-etc-passwd" tabindex="-1"><a class="header-anchor" href="#_1-1-用户信息文件-etc-passwd" aria-hidden="true">#</a> 1.1 用户信息文件 /etc/passwd</h3><p><code>root:x:0:0:root:/root:/bin/bash</code></p>',4),c=s("ul",null,[s("li",null,"第一列：用户名"),s("li",null,"第二列：密码位（x表示有密码，具体密码在/etc/shadow）"),s("li",null,[a("第三列：用户ID "),s("ul",null,[s("li",null,"0超级用户UID。如果用户UID为0，代表这个账号是管理员账号。那Linux中如何把普通用户升级成为管理员呢？就是把其他用户的UID修改为0就可以了，不建议建立多个管理员账号。"),s("li",null,"1-499系统用户（伪用户）UID。这些UID账号是系统保留给系统用户的UID，也就是说UID是1-499范围内的用户是不能登录系统的，而是用来运行系统或服务的。其中1-99是系统保留的账号，系统自动创建。100-499 是预留给用户创建系统账号的。"),s("li",null,[a("500-60000普通用户UID。建立的普通用户UID从500开始，最大到60000。这些用户足够使用了，但是如果不够也不用害怕，2.6.x内核以后的Linux系统用户UID已经可以支持"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"32")])]),s("annotation",{encoding:"application/x-tex"},"2^{32}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"32")])])])])])])])])])])]),a("这么多了。")])])]),s("li",null,[a("第四列：组ID "),s("ul",null,[s("li",null,"GID 添加用户时，如果不指定用户所属的初始组，那么会建立和用户名相同的组")])]),s("li",null,"第五列：用户说明第六列：用户家目录 ~"),s("li",null,[a("第七列：登录shell "),s("ul",null,[s("li",null,"用户的是/bin/bash"),s("li",null,"伪用户的是/sbin/nologin 表示无法登陆")])])],-1),d=n(`<h3 id="_1-2-影子文件-etc-shadow" tabindex="-1"><a class="header-anchor" href="#_1-2-影子文件-etc-shadow" aria-hidden="true">#</a> 1.2 影子文件 /etc/shadow</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root:<span class="token variable">$6</span><span class="token variable">$9w5Td6lg</span><span class="token variable">$bgpsy3olsq9WwWvS5Sst2W3ZiJpuCGDY</span>.4w4MRk3ob/i85fI38RH15wzVoomff9isV1PzdcXmixzhnMVhMxbv0:15775:0:99999:7:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>第一列：用户名</p></li><li><p>第二列：加密密码</p></li><li><p>第三列：密码最近更改时间（时间戳表示）, 1970年1月1日作为标准时间</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#时间戳转日期</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># date -d &quot;1970-01-   01 15775 days&quot;</span>
<span class="token number">2013</span>年 03月 <span class="token number">11</span>日星期一 00:00:00 CST

<span class="token comment">#日期转时间戳</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo $(($(date --date=&quot;2013/03/11&quot; +%s)/86400+1))</span>
<span class="token number">15775</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>第四列：两次密码的修改间隔时间（和第3字段相比）</p></li><li><p>第五例：密码有效期（和第3字段相比）</p></li><li><p>第六列：密码修改到期前的警告天数（和第5字段相比）</p></li><li><p>第七列：密码过期后的宽限天数（和第5字段相比）</p></li><li><p>第八列：密码失效时间这里同样要写时间戳，也就是用1970年1月1日进行时间换算。如果超过了失效时间，就算密码没有过期，用户也就失效无法使用了</p></li><li><p>第九列：保留</p></li></ul><h3 id="_1-3-组信息文件-etc-group" tabindex="-1"><a class="header-anchor" href="#_1-3-组信息文件-etc-group" aria-hidden="true">#</a> 1.3 组信息文件 /etc/group</h3><p><code>root:x:0:root</code></p><ul><li>第一列：组名</li><li>第二列：组密码位</li><li>第三列： GID</li><li>第四列：此组中支持的其他用户.附加组是此组的用户</li></ul><blockquote><ul><li>初始组：每个用户初始组只能有一个，初始组只能有一个，一般都是和用户名相同的组作为初始组</li><li>附加组：每个用户可以属于多个附加组。要把用户加入组，都是加入附加组</li></ul></blockquote><h3 id="_1-4-组密码文件-etc-gshadow" tabindex="-1"><a class="header-anchor" href="#_1-4-组密码文件-etc-gshadow" aria-hidden="true">#</a> 1.4 组密码文件 /etc/gshadow</h3><ul><li>如果给用户组设定了组管理员，并给该用户组设定了组密码，组密码就保存在这个文件当中。组管理员就可以利用这个密码管理这个用户组了。</li></ul><h3 id="_1-5-用户的家目录" tabindex="-1"><a class="header-anchor" href="#_1-5-用户的家目录" aria-hidden="true">#</a> 1.5 用户的家目录</h3><ul><li>root用户在 /root，普通用户在 /home/user</li></ul><h3 id="_1-6-用户邮箱目录" tabindex="-1"><a class="header-anchor" href="#_1-6-用户邮箱目录" aria-hidden="true">#</a> 1.6 用户邮箱目录</h3><ul><li>这个邮箱在/var/spool/mail目录当中，例如user1用户的邮箱就是/var/spool/mail/user1文件</li></ul><h3 id="_1-7-用户模版目录-etc-skel" tabindex="-1"><a class="header-anchor" href="#_1-7-用户模版目录-etc-skel" aria-hidden="true">#</a> 1.7 用户模版目录 /etc/skel</h3><h2 id="二、用户管理命令" tabindex="-1"><a class="header-anchor" href="#二、用户管理命令" aria-hidden="true">#</a> 二、用户管理命令</h2><h3 id="_2-1-添加用户" tabindex="-1"><a class="header-anchor" href="#_2-1-添加用户" aria-hidden="true">#</a> 2.1 添加用户</h3><ul><li>添加用户只是修改或增加了以下六个文件，手工删除六个文件的内容就可以删除用户。 <ul><li>/etc/passwd</li><li>/etc/shadow</li><li>/etc/group</li><li>/etc/gshadow</li><li>/home/user</li><li>/var/spool/mail/user</li></ul></li></ul><h4 id="_2-1-1-useradd-命令" tabindex="-1"><a class="header-anchor" href="#_2-1-1-useradd-命令" aria-hidden="true">#</a> 2.1.1 useradd 命令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># useradd 选项 用户名</span>
选项：
  <span class="token parameter variable">-u</span>  <span class="token number">550</span>指定<span class="token environment constant">UID</span>     
  <span class="token parameter variable">-g</span>  组名指定初始组不要手工指定      
  <span class="token parameter variable">-G</span>  组名指定附加组，把用户加入组，使用附加组  
  <span class="token parameter variable">-c</span>  说明添加说明      
  <span class="token parameter variable">-d</span>  目录手工指定家目录，目录不需要事先建立    
  <span class="token parameter variable">-s</span>  shell   /bin/bash
  
如：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># groupadd lamp1</span>
<span class="token comment">#先手工添加lamp1用户组，因为我一会要把lamp1用户的初始组指定过来，如果不事先建立，会报错用户组不存在[root@localhost ~]# useradd -u 550 -g lamp1 -G root -d /home/lamp1  \\ </span>
<span class="token parameter variable">-c</span> <span class="token string">&quot;test user&quot;</span> <span class="token parameter variable">-s</span> /bin/bash lamp1 
<span class="token comment">#建立用户lamp1的同时指定了UID（550），初始组（lamp1），附加组（root），家目录（/home/lamp1），用户说明(test user)和用户登录shell（/bin/bash）</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># grep &quot;lamp1&quot; /etc/passwd /etc/shadow /etc/group</span>
<span class="token comment">#同时查看三个文件/etc/passwd:lamp1:x:550:502:test user:/home/lamp1:/bin/bash</span>
<span class="token comment">#用户的UID、初始组、用户说明、家目录和登录shell都和命令手工指定的一致</span>
/etc/shadow:lamp1:<span class="token operator">!</span><span class="token operator">!</span>:15710:0:99999:7:::
<span class="token comment">#lamp1用户还没有设定密码/etc/group:root:x:0:lamp1 </span>
<span class="token comment">#lamp1用户加入了root组，root组是lamp1用户的附加组</span>
/etc/group:lamp1:x:502:
<span class="token comment">#GID502的组是lamp1组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ll -d /home/lamp1/</span>
drwx------ <span class="token number">3</span> lamp1 lamp1 <span class="token number">4096</span> <span class="token number">1</span>月    <span class="token number">6</span> 01:13 /home/lamp1/ 
<span class="token comment">#家目录也建立了啊。不需要手工建立家目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>不常用选项</p></blockquote><h4 id="_2-2-2-useradd-的默认值" tabindex="-1"><a class="header-anchor" href="#_2-2-2-useradd-的默认值" aria-hidden="true">#</a> 2.2.2 useradd 的默认值</h4><ul><li>useradd 添加用户时参考的默认值文件主要有两个，分别是/etc/default/useradd 和/etc/login.defs</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vi /etc/default/useradd</span>
<span class="token comment"># useradd defaults file</span>
<span class="token assign-left variable">GROUP</span><span class="token operator">=</span><span class="token number">100</span>
<span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/home
<span class="token assign-left variable">INACTIVE</span><span class="token operator">=</span>-1 
<span class="token assign-left variable">EXPIRE</span><span class="token operator">=</span>
<span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>/bin/bash
<span class="token assign-left variable">SKEL</span><span class="token operator">=</span>/etc/ske
<span class="token assign-left variable">lCREATE_MAIL_SPOOL</span><span class="token operator">=</span>yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>GROUP=100 <ul><li>这个选项是建立用户的默认组，也就是说添加每个用户时，用户的初始组就是GID为100的这个用户组。目前我们采用的机制私有用户组机制。</li></ul></li><li>HOME=/home <ul><li>这个选项是用户的家目录的默认位置，所以所有的新建用户的家目录默认都在/home/下。</li></ul></li><li>INACTIVE=-1 <ul><li>这个选项就是密码过期后的宽限天数，也就是/etc/shadow文件的第七个字段。如果是天数，比如10代表密码过期后10天后失效；如果是0，代表密码过期后立即失效；如果是-1，则代表密码永远不会失效。这里默认值是-1，所以所有新建立的用户密码都不会失效。</li></ul></li><li>EXPIRE= <ul><li>这个选项是密码失效时间，也就是/etc/shadow文件的第八个字段。也就说用户到达这个日期后就会直接失效。当然这里也是使用时间戳来表示日期的。默认值是空，所以所有新建用户没有失效时间，永久有效。</li></ul></li><li>SHELL=/bin/bash <ul><li>这个选项是用户的默认shell的。/bin/bash是Linux的标志shell，所以所有新建立的用户默认都具备shell赋予的权限。</li></ul></li><li>SKEL=/etc/skel <ul><li>这个选项就是定义用户的模板目录的位置，/etc/skel/目录中的文件都会复制到新建用户的家目录当中。</li></ul></li><li>CREATE_MAIL_SPOOL=yes <ul><li>这个选项定义是否给新建用户建立邮箱，默认是创建，也就是说所有的新建用户系统都会新建一个邮箱，放在/var/spool/mail/下和用户名相同。</li></ul></li></ul></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vi /etc/login.defs</span>
<span class="token comment">#这个文件有些注释，把注释删除掉，文件内容就变成下面这个样子了</span>
MAIL_DIR        /var/spool/mail
PASS_MAX_DAYS   <span class="token number">99999</span>
PASS_MIN_DAYS   <span class="token number">0</span>
PASS_MIN_LEN    <span class="token number">5</span>
PASS_WARN_AGE   <span class="token number">7</span>
UID_MIN                   <span class="token number">500</span>
UID_MAX                 <span class="token number">60000</span>
GID_MIN                   <span class="token number">500</span>
GID_MAX                 <span class="token number">60000</span>
CREATE_HOME     <span class="token function">yes</span>
UMASK           077
USERGROUPS_ENAB <span class="token function">yes</span>
ENCRYPT_METHOD SHA512
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>MAIL_DIR <ul><li>/var/spool/mail这行指定了新建用户的默认邮箱位置。比如user1用户的邮箱是就是/var/spool/mail/user1。</li></ul></li><li>PASS_MAX_DAYS 99999 <ul><li>这行指定的是密码的有效期，也就是/etc/shadow文件的第五字段。代表多少天之后必须修改密码，默认值是99999。</li></ul></li><li>PASS_MIN_DAYS 0 <ul><li>这行指定的是两次密码的修改间隔时间，也就是/etc/shadow文件的第四字段。代表第一次修改密码之后，几天后才能再次修改密码。默认值是0。</li></ul></li><li>PASS_MIN_LEN 5 <ul><li>这行代表密码的最小长度，默认不小于5位。但是我们现在用户登录时验证已经被PAM模块取代，所以这个选项并不生效。</li></ul></li><li>PASS_WARN_AGE 7 <ul><li>这行代表密码修改到期前的警告天数，也就是/etc/shadow文件的第六字段。代表密码到底有效期前多少天开始进行警告提醒，默认值是7天。</li></ul></li><li>UID_MIN 500</li><li>UID_MAX 60000 <ul><li>这两行代表创建用户时，最小UID和最大的UID的范围。我们2.6.x内核开始，Linux用户的UID最大可以支持232这么多，但是真正使用时最大范围是60000。还要注意如果我手工指定了一个用户的UID是550，那么下一个创建的用户的UID就会从551开始，哪怕500- 549之间的UID没有使用（小于500的UID是给伪用户预留的）。</li></ul></li><li>GID_MIN 500</li><li>GID_MAX 60000 <ul><li>这两行指定了GID的最小值和最大值之间的范围。</li></ul></li><li>CREATE_HOME yes <ul><li>这行指定建立用户时是否自动建立用户的家目录，默认是建立</li></ul></li><li>UMASK 077 <ul><li>这行指定的是建立的用户家目录的默认权限，因为umask值是077，所以新建的用户家目录的权限是700。</li></ul></li><li>USERGROUPS_ENAB yes <ul><li>这行指定的是使用命令userdel删除用户时，是否删除用户的初始组，默认是删除。</li></ul></li><li>ENCRYPT_METHOD SHA512 <ul><li>这行指定Linux用户的密码使用SHA512散列模式加密，这是新的密码加密模式，原先的Linux只能用DES或MD5方式加密</li></ul></li></ul></blockquote><h3 id="_2-2-设定密码" tabindex="-1"><a class="header-anchor" href="#_2-2-设定密码" aria-hidden="true">#</a> 2.2 设定密码</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#passwd 选项 用户名</span>
选项：    
	-l:   暂时锁定用户。仅root用户可用   
  -u:   解锁用户。仅root用户可用 
  --stdin:可以将通过管道符输出的数据作为用户的密码。主要在批量添加用户时使用
  
  <span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#passwd </span>
  <span class="token comment">#passwd直接回车代表修改当前用户的密码</span>
  
  <span class="token comment">#也可以使用字符串作为密码</span>
  <span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo &quot;123&quot; | passwd --stdin user1 </span>
  <span class="token comment">#更改用户 user1的密码。</span>
  
  <span class="token comment">#可以通过命令，把密码修改日期归零（shadow第3字段）.这样用户一登陆就要修改密码，例如:</span>
  <span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># chage -d 0 user1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-用户信息修改" tabindex="-1"><a class="header-anchor" href="#_2-3-用户信息修改" aria-hidden="true">#</a> 2.3 用户信息修改</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#usermod 选项 用户名</span>
选项：    
	<span class="token parameter variable">-u</span> <span class="token environment constant">UID</span>：修改用户的<span class="token environment constant">UID</span>   
  <span class="token parameter variable">-d</span> 家目录：修改用户的家目录。家目录必须写绝对路径 
  <span class="token parameter variable">-c</span> 用户说明：修改用户的说明信息，就是/etc/passwd文件的第五个字段  
  <span class="token parameter variable">-g</span> 组名：修改用户的初始组，就是/etc/passwd文件的第四个字段
  <span class="token parameter variable">-G</span> 组名：修改用户的附加组，其实就是把用户加入其他用户组 
  <span class="token parameter variable">-s</span> shell：修改用户的登录Shell。默认是/bin/bash   
  <span class="token parameter variable">-e</span> 日期：修改用户的失效日期，格式为“YYYY-MM-DD”。也就是/etc/shadow文件的第八个字段 
  <span class="token parameter variable">-L</span> 临时锁定用户（Lock）    
  <span class="token parameter variable">-U</span> 解锁用户（Unlock）
  <span class="token parameter variable">-l</span> 修改用户名 <span class="token function">usermod</span> <span class="token parameter variable">-l</span> 新名 旧名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-删除用户" tabindex="-1"><a class="header-anchor" href="#_2-4-删除用户" aria-hidden="true">#</a> 2.4 删除用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># userdel [-r] 用户名</span>
选项：  
	-r：在删除用户的同时删除用户的家目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-切换用户身份" tabindex="-1"><a class="header-anchor" href="#_2-5-切换用户身份" aria-hidden="true">#</a> 2.5 切换用户身份</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># su [选项] 用户名</span>
选项：
	-：选项只使用“-”代表连带用户的环境变量一起切换
	<span class="token parameter variable">-c</span> 命令：仅执行一次命令，而不切换用户身份
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>“-”不能省略，它代表切换用户身份时，用户的环境变量也要切换成新用户的环境变量。</p></blockquote><h2 id="三、组管理命令" tabindex="-1"><a class="header-anchor" href="#三、组管理命令" aria-hidden="true">#</a> 三、组管理命令</h2><h3 id="_3-1-添加用户组" tabindex="-1"><a class="header-anchor" href="#_3-1-添加用户组" aria-hidden="true">#</a> 3.1 添加用户组</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># groupadd 选项 组名</span>
选项：
	<span class="token parameter variable">-g</span> GID：指定组ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-删除用户组" tabindex="-1"><a class="header-anchor" href="#_3-2-删除用户组" aria-hidden="true">#</a> 3.2 删除用户组</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#groupdel 组名</span>

如：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#groupdel testgrp </span>
<span class="token comment">#删除testgrp组</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：要删除的组不能是其他用户的初始组，也就是说这个组中没有初始用户才可以删除。如果组中有附加用户，则删除组时不受影响。</p></blockquote><h3 id="_3-3-从组中添加或删除用户" tabindex="-1"><a class="header-anchor" href="#_3-3-从组中添加或删除用户" aria-hidden="true">#</a> 3.3 从组中添加或删除用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># gpasswd 选项 组名</span>
选项：
	<span class="token parameter variable">-a</span> 用户名：把用户加入组
	<span class="token parameter variable">-d</span> 用户名：把用户从组中删除
	
如：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># groupadd grouptest </span>
<span class="token comment">#添加组grouptest  </span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># gpasswd -a user1 grouptest </span>
<span class="token comment">#把用户user1加入grouptest组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># gpasswd -d user1 grouptest </span>
<span class="token comment">#把用户user1从组中删除</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>​ 也可以使用usermod命令把用户加入某个组，不过usermod命令的操作对象是用户，命令是“usermod -G grouptest user1”，把用户名作为参数放在最后；而gpasswd命令的操作对象是组，命令是“gpasswd -a user1 grouptest”，把组名作为参数放在最后。</p></blockquote><h3 id="_3-4-改变有效组" tabindex="-1"><a class="header-anchor" href="#_3-4-改变有效组" aria-hidden="true">#</a> 3.4 改变有效组</h3><ul><li>当用户创建一个文件时，文件的所属组默认是用户的初始组，即使该用户有其他附加组。可以使用newgrp命令改变用户的有效组。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># newgrp 组名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,49),r=[o,c,d];function p(u,m){return l(),i("div",null,r)}const h=e(t,[["render",p],["__file","linux-user-manage.html.vue"]]);export{h as default};
