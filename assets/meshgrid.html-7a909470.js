import{_ as a,o as t,c as e,f as p,b as n,e as s}from"./app-583ce5c6.js";const i={},c=p(`<h1 id="meshgrid-生成坐标网格" tabindex="-1"><a class="header-anchor" href="#meshgrid-生成坐标网格" aria-hidden="true">#</a> meshgrid 生成坐标网格</h1><p>无论是 np.meshgrid 还是 torch.meshgrid 都是一样的，这里就用 torch.meshgrid 举例。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>torch<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span><span class="token operator">*</span>tensors<span class="token punctuation">,</span> indexing<span class="token operator">=</span><span class="token string">&#39;ij&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>*tensors：任意数量的一维张量。这些张量定义了网格的每一个维度</p></li><li><p>indexing：网格的索引方式。可以是 &#39;xy&#39; 或 &#39;ij&#39;，默认是 &#39;ij&#39;</p><ul><li><p>&#39;xy&#39;：适合笛卡尔坐标系，其中第一个张量表示 x 轴，第二个张量表示 y 轴</p></li><li><p>&#39;ij&#39;：适合矩阵索引，其中第一个张量表示行索引，第二个张量表示列索引</p></li></ul></li></ul><p>&#39;xy&#39; 和 &#39;ij&#39; 可以分别理解为如下坐标系：</p><figure><img src="https://rocyan.oss-cn-hangzhou.aliyuncs.com/blog/202407290919991.png" alt="202407231000090" tabindex="0" loading="lazy"><figcaption>202407231000090</figcaption></figure><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Assume W=3 and H=2 for example</span>
W <span class="token operator">=</span> <span class="token number">3</span>
H <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment"># indexing=&#39;xy&#39;</span>
grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> torch<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>W<span class="token punctuation">,</span> device<span class="token operator">=</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>H<span class="token punctuation">,</span> device<span class="token operator">=</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> indexing<span class="token operator">=</span><span class="token string">&#39;xy&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># grid_x: tensor([[0., 1., 2.], [0., 1., 2.]])</span>
<span class="token comment"># grid_y: tensor([[0., 0., 0.], [1., 1., 1.]])</span>

<span class="token comment"># indexing=&#39;ij&#39;</span>
grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> torch<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>H<span class="token punctuation">,</span> device<span class="token operator">=</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>W<span class="token punctuation">,</span> device<span class="token operator">=</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> indexing<span class="token operator">=</span><span class="token string">&#39;ij&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># grid_x: tensor([[0., 0., 0.], [1., 1., 1.]])</span>
<span class="token comment"># grid_y: tensor([[0., 1., 2.], [0., 1., 2.]])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>indexing=&#39;xy&#39; 生成的 grid_x 对应的是 x 轴坐标，grid_y 对应的是 y 轴坐标</li><li>indexing=&#39;ij&#39; 生成的 grid_x 对应的是行索引，grid_y 对应的是列索引</li></ul><h2 id="拓展" tabindex="-1"><a class="header-anchor" href="#拓展" aria-hidden="true">#</a> 拓展</h2>`,10),l=n("p",null,[s("这也就是为什么在图片坐标系下默认的是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"H"),n("mo",null,"×"),n("mi",null,"W")]),n("annotation",{encoding:"application/x-tex"},"H\\times W")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"×"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W")])])]),s("，而在笛卡尔坐标系下默认的是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"W"),n("mo",null,"×"),n("mi",null,"H")]),n("annotation",{encoding:"application/x-tex"},"W\\times H")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"×"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),s("。")],-1),o=[c,l];function r(u,d){return t(),e("div",null,o)}const h=a(i,[["render",r],["__file","meshgrid.html.vue"]]);export{h as default};
