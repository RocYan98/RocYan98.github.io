const e=JSON.parse(`{"key":"v-43a3f126","path":"/posts/PAT/senior-algorithm.html","title":"PAT 高级算法","lang":"zh-CN","frontmatter":{"date":"2023-08-03T00:00:00.000Z","tag":["PAT","Algorithm"],"category":"PAT","order":4,"description":"PAT 高级算法 PAT甲级题目整理 BFS void BFS(int s) { queue&lt;int&gt; q; q.push(s); while (q.size()) { //1.取出队首元素 //2.队首元素出队 //3.访问队首元素 //4.将下一层节点没有入过队的元素入队 } }","head":[["meta",{"property":"og:url","content":"https://rocyan98.github.io/posts/PAT/senior-algorithm.html"}],["meta",{"property":"og:site_name","content":"Roc Yan's Blog"}],["meta",{"property":"og:title","content":"PAT 高级算法"}],["meta",{"property":"og:description","content":"PAT 高级算法 PAT甲级题目整理 BFS void BFS(int s) { queue&lt;int&gt; q; q.push(s); while (q.size()) { //1.取出队首元素 //2.队首元素出队 //3.访问队首元素 //4.将下一层节点没有入过队的元素入队 } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-15T08:25:48.000Z"}],["meta",{"property":"article:author","content":"Roc Yan"}],["meta",{"property":"article:tag","content":"PAT"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:published_time","content":"2023-08-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-15T08:25:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PAT 高级算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-15T08:25:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Roc Yan\\",\\"url\\":\\"https://rocyan.top\\",\\"email\\":\\"qpyan23@m.fudan.edu.cn\\"}]}"]]},"headers":[{"level":2,"title":"PAT甲级题目整理","slug":"pat甲级题目整理","link":"#pat甲级题目整理","children":[]},{"level":2,"title":"BFS","slug":"bfs","link":"#bfs","children":[]},{"level":2,"title":"Dijkstra算法","slug":"dijkstra算法","link":"#dijkstra算法","children":[]},{"level":2,"title":"Bellman-Ford算法","slug":"bellman-ford算法","link":"#bellman-ford算法","children":[]},{"level":2,"title":"SPFA","slug":"spfa","link":"#spfa","children":[]},{"level":2,"title":"Floyd算法","slug":"floyd算法","link":"#floyd算法","children":[]},{"level":2,"title":"Prim算法","slug":"prim算法","link":"#prim算法","children":[]},{"level":2,"title":"Kruskal算法","slug":"kruskal算法","link":"#kruskal算法","children":[]},{"level":2,"title":"线性DP（状态计算一般是看最后一步）","slug":"线性dp-状态计算一般是看最后一步","link":"#线性dp-状态计算一般是看最后一步","children":[{"level":3,"title":"数字三角形","slug":"数字三角形","link":"#数字三角形","children":[]},{"level":3,"title":"最大连续子序列和","slug":"最大连续子序列和","link":"#最大连续子序列和","children":[]},{"level":3,"title":"最长上升子序列","slug":"最长上升子序列","link":"#最长上升子序列","children":[]},{"level":3,"title":"最长公共子序列","slug":"最长公共子序列","link":"#最长公共子序列","children":[]},{"level":3,"title":"最长公共子串","slug":"最长公共子串","link":"#最长公共子串","children":[]},{"level":3,"title":"编辑距离","slug":"编辑距离","link":"#编辑距离","children":[]}]},{"level":2,"title":"区间DP（状态计算一般通过枚举区间的分割点）","slug":"区间dp-状态计算一般通过枚举区间的分割点","link":"#区间dp-状态计算一般通过枚举区间的分割点","children":[{"level":3,"title":"石子合并","slug":"石子合并","link":"#石子合并","children":[]},{"level":3,"title":"最长回文子串","slug":"最长回文子串","link":"#最长回文子串","children":[]},{"level":3,"title":"DAG最长路","slug":"dag最长路","link":"#dag最长路","children":[]}]},{"level":2,"title":"背包问题（一般判断第i个物品拿不拿或拿几个）","slug":"背包问题-一般判断第i个物品拿不拿或拿几个","link":"#背包问题-一般判断第i个物品拿不拿或拿几个","children":[{"level":3,"title":"01背包问题","slug":"_01背包问题","link":"#_01背包问题","children":[]},{"level":3,"title":"完全背包问题（一次进阶版，朴素版O($$n^3$$)时间复杂度太高，最终版只是省下空间复杂度没必要）","slug":"完全背包问题-一次进阶版-朴素版o-n-3-时间复杂度太高-最终版只是省下空间复杂度没必要","link":"#完全背包问题-一次进阶版-朴素版o-n-3-时间复杂度太高-最终版只是省下空间复杂度没必要","children":[]},{"level":3,"title":"多重背包问题","slug":"多重背包问题","link":"#多重背包问题","children":[]},{"level":3,"title":"分组背包问题","slug":"分组背包问题","link":"#分组背包问题","children":[]}]},{"level":2,"title":"计数类DP","slug":"计数类dp","link":"#计数类dp","children":[{"level":3,"title":"整数划分","slug":"整数划分","link":"#整数划分","children":[]}]},{"level":2,"title":"树型DP","slug":"树型dp","link":"#树型dp","children":[]},{"level":2,"title":"KMP算法","slug":"kmp算法","link":"#kmp算法","children":[]},{"level":2,"title":"树状数组","slug":"树状数组","link":"#树状数组","children":[]}],"git":{"createdTime":1691819321000,"updatedTime":1692087948000,"contributors":[{"name":"Yan","email":"rocyan98@gmail.com","commits":6}]},"readingTime":{"minutes":12.1,"words":3630},"filePathRelative":"posts/PAT/senior-algorithm.md","localizedDate":"2023年8月3日","excerpt":"<h1> PAT 高级算法</h1>\\n<h2> <a href=\\"https://github.com/RocYan98/PAT\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PAT甲级题目整理</a></h2>\\n<h2> BFS</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">void</span> <span class=\\"token function\\">BFS</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> s<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    queue<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span> q<span class=\\"token punctuation\\">;</span>\\n    q<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>q<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">size</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//1.取出队首元素</span>\\n        <span class=\\"token comment\\">//2.队首元素出队</span>\\n        <span class=\\"token comment\\">//3.访问队首元素</span>\\n        <span class=\\"token comment\\">//4.将下一层节点没有入过队的元素入队</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
