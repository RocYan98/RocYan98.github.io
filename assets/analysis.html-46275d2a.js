import{_ as r,r as t,o,c as h,b as a,e,d as s,w as d,f as i}from"./app-af101884.js";const c={},l=i('<h2 id="nerf-是做什么的" tabindex="-1"><a class="header-anchor" href="#nerf-是做什么的" aria-hidden="true">#</a> NeRF 是做什么的</h2><p>想知道一个模型是干什么的，最简单的方式就是看这个模型的输入输出。先忽略内部细节，NeRF 的输入就是对一个物体从不同角度拍摄的多张图片，输出就是渲染出来的输入集中所没有的新视角下的图片 (如图 1 所展示的那样)，简而言之 NeRF 就是合成新视角下的视图的模型。</p><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/a5o42t.png" alt="Fig. 1" tabindex="0" loading="lazy"><figcaption>Fig. 1</figcaption></figure><h2 id="nerf-是怎么做的" tabindex="-1"><a class="header-anchor" href="#nerf-是怎么做的" aria-hidden="true">#</a> NeRF 是怎么做的</h2><figure><img src="http://rocyan.oss-cn-hangzhou.aliyuncs.com/notes/n4t4pk.png" alt="Fig. 2：Pipeline" tabindex="0" loading="lazy"><figcaption>Fig. 2：Pipeline</figcaption></figure><h3 id="pipeline" tabindex="-1"><a class="header-anchor" href="#pipeline" aria-hidden="true">#</a> Pipeline</h3><ul><li>(a). 沿着每个像素的光线进行采样，将采样点的 3 维空间坐标和 2 维视角输入 MLP</li><li>(b). 通过 MLP 计算出每个采样点的颜色和密度</li><li>(c). 通过体渲染技术渲染出每个像素的颜色并合成图像</li><li>(d). 体渲染的函数是可微的，因此通过损失函数 (损失函数是计算渲染出的像素颜色和真实像素颜色之间的平方差) 来优化模型</li></ul><h3 id="实现细节" tabindex="-1"><a class="header-anchor" href="#实现细节" aria-hidden="true">#</a> 实现细节</h3><h4 id="采样" tabindex="-1"><a class="header-anchor" href="#采样" aria-hidden="true">#</a> 采样</h4>',9),f=a("strong",null,"分层采样 (Hierarchical Sampling)",-1),u=a("strong",null,"粗网络 (Coarse)",-1),p=a("strong",null,"细网络 (Fine)",-1),g=i('<h4 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h4><h4 id="体渲染" tabindex="-1"><a class="header-anchor" href="#体渲染" aria-hidden="true">#</a> 体渲染</h4><h2 id="nerf-做的怎么样" tabindex="-1"><a class="header-anchor" href="#nerf-做的怎么样" aria-hidden="true">#</a> NeRF 做的怎么样</h2>',3);function _(m,x){const n=t("RouterLink");return o(),h("div",null,[l,a("p",null,[e("NeRF 在采样中使用了一个 trick，就是"),f,e("，简单来说就是训练两个网络 ，"),u,e(" 和"),p,e("。粗网络会采样 64 个点，通过粗网络的结果可以知道 Volume 中哪些地方更值得被采样 (原理在"),s(n,{to:"/posts/paper/NeRF/pre-knowledge.html"},{default:d(()=>[e("前置知识")]),_:1}),e("中有详细解释)。")]),g])}const F=r(c,[["render",_],["__file","analysis.html.vue"]]);export{F as default};
