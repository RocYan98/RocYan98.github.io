import{_ as r,r as i,o,c as s,b as e,e as a,d as n,f as c}from"./app-c044410f.js";const l={},d=e("h2",{id:"_2dgs-2d-gaussian-splatting-for-geometrically-accurate-radiance-fields",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2dgs-2d-gaussian-splatting-for-geometrically-accurate-radiance-fields","aria-hidden":"true"},"#"),a(),e("strong",null,"2DGS"),a(": 2D Gaussian Splatting for Geometrically Accurate Radiance Fields")],-1),g={href:"https://surfsplatting.github.io",target:"_blank",rel:"noopener noreferrer"},h=c('<p>SIGGRAPH 2024</p><figure><img src="https://rocyan.oss-cn-hangzhou.aliyuncs.com/blog/202407021651321.png" alt="Fig. 1: Overview" tabindex="0" loading="lazy"><figcaption>Fig. 1: Overview</figcaption></figure><h2 id="abstract" tabindex="-1"><a class="header-anchor" href="#abstract" aria-hidden="true">#</a> Abstract</h2><p>3D Gaussian Splatting (3DGS) 最近在辐射场重建领域取得了革命性进展，实现了高质量的新视角合成和快速渲染。然而，由于 3D 高斯的多视图不一致性，3DGS 无法准确表示表面。本文提出了 2D Gaussian Splatting (2DGS)，这是一种从多视图图像中建模和重建几何精确辐射场的新方法。核心思想是将 3D 体积压缩成一组 <strong>2D 定向平面高斯盘 (2D oriented planar Gaussian disks)</strong>。与 3D 高斯不同，2D 高斯在建模表面时内在地提供了视图一致的几何形状。为了准确恢复薄表面并实现稳定优化，本文介绍了利用<strong>光线泼溅交汇 (ray-splat intersection)</strong> 和光栅化实现透视准确的 2D splatting 过程。此外，还结合了<strong>深度误差 (depth distortion)</strong> 和法线一致性项，以进一步提高重建质量。证明了本文的可微渲染器在保持竞争性外观质量、快速训练速度和实时渲染的同时，能够实现无噪声且细节丰富的几何重建。</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>因为体积 3D 高斯模型模拟了完整角度的辐射，这与表面的薄性是冲突的。前人的工作已经证明了<strong>表面元素 (surfels)</strong> 是一个高效表示复杂几何的方法，因此本文用 2D 高斯基元，即<strong>定向椭圆盘 (oriented elliptical disk)</strong> 来表示 3D 场景。相较于 3D 高斯基元，2D 高斯基元可以准确地表示出物体的表面。如图 2 所示，本文采用显式 ray-splat intersection 的方法。3DGS 通过像素光线的相交处来估计高斯的属性，当视角不同时，会产生不同的交平面，最终会导致不一致性。而 ray-splat intersection 的方法能够达到交汇平面的一致性，最实现透视正确的 splatting 效果。并且 2D 基元能够很方便地计算出法线。</p><blockquote><p>A surfel, that is, a point structure representing Euclidean xyz coordinates, together with normal coordinates, a RGBA color, a radius, a confidence value and the surface curvature estimate.</p></blockquote><figure><img src="https://rocyan.oss-cn-hangzhou.aliyuncs.com/blog/202407021720559.png" alt="Fig. 2: Comparison of 3DGS and 2DGS" tabindex="0" loading="lazy"><figcaption>Fig. 2: Comparison of 3DGS and 2DGS</figcaption></figure><p>如果只是用图片求损失来优化效果并不是非常好，因此本文还引入了深度误差和法线一致性损失。深度误差损失将 2D 基元集中在沿光线分布的一个小范围内，解决了渲染过程中忽略高斯基元之间距离的问题；法线一致性损失能最大限度地减少渲染的法线贴图与渲染的深度梯度之间的差异，确保深度和法线定义的几何图形保持一致。</p><p>本文的贡献为：</p><ul><li>提出了一种高效的可微分 2D 高斯渲染器，通过利用 2D 表面建模、ray-splat intersection 和体积积分，实现透视正确的 splatting。</li><li>引入了两种正则化损失，以改进无噪声表面重建。</li><li>与其他显式表示法相比，本文的方法实现了最先进的几何重建和<strong>新视角生成 (novel view synthesis, NVS)</strong> 结果。</li></ul><h2 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> Method</h2><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>',13),p={href:"https://arxiv.org/abs/2403.17888",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/gwplovekimi/article/details/139115674",target:"_blank",rel:"noopener noreferrer"};function f(D,_){const t=i("ExternalLinkIcon");return o(),s("div",null,[d,e("p",null,[e("a",g,[a("项目地址"),n(t)])]),h,e("p",null,[e("a",p,[a("[1]2D Gaussian Splatting for Geometrically Accurate Radiance Fields"),n(t)])]),e("p",null,[e("a",u,[a("[2]学习笔记之——2D Gaussian Splatting（2DGS）"),n(t)])])])}const G=r(l,[["render",f],["__file","2DGS.html.vue"]]);export{G as default};
